#include <stdio.h>
#include<stdlib.h>

struct node 
{
    int data;
    struct node *prev;
    struct node *next;
};

void traversal(struct node *ptr)
{
    while (ptr != NULL)
    {
        printf("%d \t",ptr->data);
        ptr = ptr->next;
        
    }
}

struct node *insertion_start(struct node *head)
{
    struct node *temp;
    printf("enter element to insert at start");
    temp = (struct node *) malloc(sizeof(struct node));
    scanf("%d",&temp->data);
    temp->next = head;
    head->prev = temp;
    head = temp;
    head->prev = NULL;
    return head;
    
}

struct node *insertion_middle(struct node *head)
{
    struct node *temp1, *temp2, *temp_add;
    printf("enter element \n");
    temp_add = (struct node *) malloc(sizeof(struct node));
    scanf("%d",&temp_add->data);
    
    int index,i;
    printf("enter position to add element \n");
    scanf("%d",&index);
    
    temp1 = head;
    for (i=1;i<index-1;i++)
    {
        temp1 = temp1->next;
    }
    
    temp2 = temp1->next;
    temp_add->next = temp2;
    temp2->prev = temp_add;
    temp1->next = temp_add;
    temp_add->prev = temp1;
    
    return head;
}

struct node *insertion_end(struct node *head,struct node *tail)
{
    struct node *temp;
    //temp->next = NULL;
    printf("enter element to insert at end");
    temp = (struct node *) malloc(sizeof(struct node));
    scanf("%d",&temp->data);
    tail->next = temp;
    temp->prev = tail;
    tail = temp;
    tail->next = NULL;
    //traversal(head);
    //return head;
    return head;
}

int main()
{
    int choice=1;
    struct node *head = NULL,*tail,*newnode;
    while (choice == 1)
    {
        printf("enter element \n");
        newnode = (struct node *) malloc(sizeof(struct node));
        scanf("%d",&newnode->data);
        newnode->next = NULL;
        
        if (head == NULL)
        {
            head = newnode;
            tail = newnode;
            head->prev = NULL;
        }
        
        else 
        {
            tail->next = newnode;
            newnode->prev = tail;
            tail = newnode;
        }
        
        printf("enter 1 to continue adding elements and 0 to stop \n");
        scanf("%d",&choice);
        
    }
    traversal(head);
    //tail = insertion_end(head,tail);
    //head = insertion_start(head);
    head = insertion_middle(head);
    traversal(head);

    return 0;
}
